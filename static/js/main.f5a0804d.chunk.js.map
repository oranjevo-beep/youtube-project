{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onSubm","e","preventDefault","props","onFormSubmit","className","onSubmit","this","type","value","onChange","setState","target","placeholder","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videos","renderList","map","id","videoId","VideoDetail","videoSrc","width","height","frameBorder","allow","allowFullScreen","description","App","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"0NAEqBA,E,4MACnBC,MAAQ,CAAEC,KAAM,I,EAIhBC,OAAS,SAACC,GACRA,EAAEC,iBACF,EAAKC,MAAMC,aAAa,EAAKN,MAAMC,O,4CAErC,WAAU,IAAD,OACP,OACE,qBAAKM,UAAU,wBAAf,SACE,sBAAMC,SAAUC,KAAKP,OAAQK,UAAU,UAAvC,SACE,gCACE,iDACA,uBACEG,KAAK,OACLC,MAAOF,KAAKT,MAAMC,KAClBW,SAAU,SAACT,GACT,EAAKU,SAAS,CAAEZ,KAAME,EAAEW,OAAOH,SAEjCI,YAAY,yB,GArBaC,a,QCCxBC,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCACTC,OAAQ,CAAEC,KAAM,UAAWX,KAAM,QAASY,WAAY,EAAGC,IAJ/C,6C,MCiBGC,MAff,YAA8C,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,cAC1B,OACE,sBAAKC,QAAS,kBAAMD,EAAcD,IAAQlB,UAAU,kBAApD,UACE,qBACEA,UAAU,WACVqB,IAAKH,EAAMI,QAAQC,WAAWC,OAAOC,IACrCC,IAAKR,EAAMI,QAAQK,QAErB,qBAAK3B,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SAAyBkB,EAAMI,QAAQK,cCChCC,EAXG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACrBW,EAAaD,EAAOE,KAAI,SAACb,GAAD,OAC5B,cAAC,EAAD,CAEEC,cAAeA,EACfD,MAAOA,GAFFA,EAAMc,GAAGC,YAKlB,OAAO,qBAAKjC,UAAU,0BAAf,SAA0C8B,KCkBpCI,MA1Bf,YAAiC,IAAVhB,EAAS,EAATA,MACrB,IAAKA,EACH,OAAO,6CAET,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAC3D,OACE,gCACE,qBAAKjC,UAAU,WAAf,SACE,wBACEoC,MAAM,MACNC,OAAO,MACPhB,IAAKc,EACLR,MAAM,uBACNW,YAAY,IACZC,MAAM,2FACNC,iBAAe,MAGnB,sBAAKxC,UAAU,aAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BkB,EAAMI,QAAQK,QACzC,4BAAIT,EAAMI,QAAQmB,qBChBLC,E,4MACnBjD,MAAQ,CAAEoC,OAAQ,GAAIc,cAAe,M,EAMrCC,a,uCAAe,WAAOlD,GAAP,eAAAmD,EAAA,sEACUC,EAAQC,IAAI,UAAW,CAC5ClC,OAAQ,CACNmC,EAAGtD,KAHM,OACPuD,EADO,OAMb,EAAK3C,SAAS,CACZuB,OAAQoB,EAASC,KAAKC,MACtBR,cAAeM,EAASC,KAAKC,MAAM,KARxB,2C,wDAWfhC,cAAgB,SAACD,GACf,EAAKZ,SAAS,CAAEqC,cAAezB,K,uDAhBjC,WACEhB,KAAK0C,aAAa,U,oBAiBpB,WACE,OACE,sBAAK5C,UAAU,eAAf,UACE,cAAC,EAAD,CAAWD,aAAcG,KAAK0C,eAC9B,qBAAK5C,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAakB,MAAOhB,KAAKT,MAAMkD,kBAEjC,qBAAK3C,UAAU,mBAAf,SACE,cAAC,EAAD,CACEmB,cAAejB,KAAKiB,cACpBU,OAAQ3B,KAAKT,MAAMoC,uB,GAjCFpB,aCFjC2C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.f5a0804d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class SearchBar extends Component {\r\n  state = { term: '' };\r\n  // onInputChange = (e) => {\r\n  //   this.setState({ term: e.target.value });\r\n  // };\r\n  onSubm = (e) => {\r\n    e.preventDefault();\r\n    this.props.onFormSubmit(this.state.term);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar ui segment\">\r\n        <form onSubmit={this.onSubm} className=\"ui form\">\r\n          <div>\r\n            <label>Video Search</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.term}\r\n              onChange={(e) => {\r\n                this.setState({ term: e.target.value });\r\n              }}\r\n              placeholder=\"Search...\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nconst KEY = 'AIzaSyAZg_L0uDpcKyOkTRp2wCNdqWGBSO3eEkk';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://www.googleapis.com/youtube/v3',\r\n  params: { part: 'snippet', type: 'video', maxResults: 5, key: KEY },\r\n});\r\n","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nfunction VideoItem({ video, onVideoSelect }) {\r\n  return (\r\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n      <img\r\n        className=\"ui image\"\r\n        src={video.snippet.thumbnails.medium.url}\r\n        alt={video.snippet.title}\r\n      />\r\n      <div className=\"content\">\r\n        <div className=\"header\">{video.snippet.title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoItem;\r\n","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const renderList = videos.map((video) => (\r\n    <VideoItem\r\n      key={video.id.videoId}\r\n      onVideoSelect={onVideoSelect}\r\n      video={video}\r\n    />\r\n  ));\r\n  return <div className=\"ui relaxed divided list\">{renderList}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import React from 'react';\r\n\r\nfunction VideoDetail({ video }) {\r\n  if (!video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n        <iframe\r\n          width=\"560\"\r\n          height=\"315\"\r\n          src={videoSrc}\r\n          title=\"YouTube video player\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        ></iframe>\r\n      </div>\r\n      <div className=\"ui segment\">\r\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoDetail;\r\n","import 'semantic-ui-css/semantic.min.css';\r\nimport React, { Component } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nexport default class App extends Component {\r\n  state = { videos: [], selectedVideo: null };\r\n\r\n  componentDidMount() {\r\n    this.onTermSubmit('cars');\r\n  }\r\n\r\n  onTermSubmit = async (term) => {\r\n    const response = await youtube.get('/search', {\r\n      params: {\r\n        q: term,\r\n      },\r\n    });\r\n    this.setState({\r\n      videos: response.data.items,\r\n      selectedVideo: response.data.items[0],\r\n    });\r\n  };\r\n  onVideoSelect = (video) => {\r\n    this.setState({ selectedVideo: video });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <SearchBar onFormSubmit={this.onTermSubmit} />\r\n        <div className=\"ui grid\">\r\n          <div className=\"ui row\">\r\n            <div className=\"eleven wide column\">\r\n              <VideoDetail video={this.state.selectedVideo} />\r\n            </div>\r\n            <div className=\"five wide column\">\r\n              <VideoList\r\n                onVideoSelect={this.onVideoSelect}\r\n                videos={this.state.videos}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}